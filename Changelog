v0.11.3 2025-05-04
* feat: print available template functions and supported databases on startup
* feat: /info endpoint is disabled by default; can by enabled by cli option
* fix: fix cache query result when query for request with group parameter
* refactor: simplify code; fix minor problems

v0.11.2 2025-04-28
* fix: fix workers configuration for db other than pg
* fix: do not try collect metrics from collectors that don't have it yet

v0.11.1 2025-04-27
* feat: scheduled queries can run in parallel
* feat(breaking): database drivers are selected by compilation tags
* fix: fix broken validate-output option
* fix: fix broken extra templates functions
* fix: fix log messages
* dev: refactor code; update golangcl-lint

v0.11.0 2025-04-22
* feat: scheduled queries may run in separate workers pool that don't
  block normal requests
* feat: new example queries for postgresql based on postgresql_exporter
* fix: fix broken concurrent requests caused by redundant locking
* fix: fix logging and support traces for scheduled queries
* bump: update deps

v0.10.0 2025-03-20
* feat: support metrics generated on query error
* fix: handle configuration error - missing metrics template
* bump: update deps

v0.9.1 2024-04-22
* feat: support systemd (notification, watchdog)
* dev: refactor code, minor fixes

v0.9.0 2024-01-06
* breaking: use duration for interval, caching time, timeout, etc, so there
  must be given unit (i.e. "1h", "5m", "30s").
* feat (experimental): background loading data into cache by "jobs" launched
  in configured interval
* fix: do not cache query result when user give some additional parameters
* dev: bump deps

v0.8.3 2023-12-09
* fix: remove empty lines from output
* fix: panic when remote connection was closed during query
* dev: refactor code

v0.8.2 2023-11-29
* fix: don't use ReadOnly transaction as it is not supported by some db
* fix: update grafana dashboard

v0.8.1 2023-11-27
* fix: broken configuration reloading
* fix: formatting errors in response

v0.8.0 2023-11-24
* dev: refactor code, fix logging, format, fix minor problems
* fix: fix broken metrics (esp. query time)
* fix: fix postgresql-related code (sqlx named queries)
* feat: configurable request timeout
* dev: include some debug code when compile with `-tags debug`
* bump: go 1.21, update deps

v0.7.5 2023-02-06
* fix: connection string for oracle & mysql
* fix: use v2 go-ora that fix connection to oracle db

v0.7.4 2023-02-05
* fix: escape connection parameters that contain unacceptable characters
* dev: drop native oracle client in favour of pure-go implementation

v0.7.3 2021-12-22
* fix: fix locking mechanism for long queries
* feat: add query groups
* feat: allow disable caching (-no-cache)
* feat: allow validate generated output (-validate-output)
* feat: add new metrics: start_time, configuration_load_time
* fix: invalid handle database types and missing validators
* dev: reorganize & clean code

v0.7.2 2021-12-19
* fix[!]: change default config file name to dbquery.yaml
* feat: add additional metrics for database pool; adjust existing metrics
  names
* feat: add simple /health endpoint
* feat: support parallel queries when request apply to more than one database,
  can be disabled with `-no-parallel-query` flag
* feat: add sample grafana panel

v0.7.1 2021-12-15
* bugfix: fix reloading configuration (include closing not existing any more
  database connections)

v0.7 2021-12-12
* feat: allow set query timeouts
* feat: prevent running the same query twice
* feat: add per database connection pool; don't create new connection on every
  request
* feat: support tls/authorization via web-config.yaml
* feat: add more configuration validators
* feat: allow live reload configuration
* feat: stop processing queries when client gone
* refactor: change logging lib to zerolog
* refactor: clean & simplify code
* refactor: update deps
* bugfix: fix various minor problems

v0.6 2019-03-17
* add initial sqls for connection

v0.5 2017-03-25
* fix concurrency problems with cache

v0.4 2017-03-18
* support sql params in remote call (unknown query params are used in sql execute)
