database:
  testdb:
    driver: sqlite
    connection:
      database: rwr3.db
  testdbpgsql:
    driver: postgres
    connection:
      database: postgres
      host: localhost
      user: dbquery_exporter
      password: dbquery_exporter
      port: 5432
  testtib:
    driver: tidb
    connection:
      database: test
      host: localhost
      user: root
      password:
      port: 4000
  testoracle:
    driver: oci8
    connection:
      database: test
      host: 127.0.0.1
      user: testuser
      password: testpass
      port: 1521

query:
  testq1:
    sql: >
       select s.name, count(t.id) as cnt from sports s left join trips t on s.id = t.sport_id group by s.name
    caching_time: 20

    metrics: |
      {{- range .R }}
      rwr3_sport_trip_count{sport="{{ .name }}"} {{ .cnt }}
      {{- end  }}
      rwr3_sport_trip_count_rows {{ .Count }}
      rwr3_sport_trip_query_secounds {{ .QueryDuration }}
      rwr3_sport_trip_last_query_unix {{ .QueryStartTime }}

  testq2:
    sql: >
       select count(t.id) as cnt from trips t

    metrics: |
      {{- range .R }}
      rwr3_trips_count {{ .cnt }}
      {{- end  }}
      rwr3_trips_count_rows {{ .Count }}
      rwr3_trips_query_secounds {{ .QueryDuration }}
      rwr3_trips_last_query_unix {{ .QueryStartTime }}

  testparam1:
    sql: >
      select count(t.id) as cnt from trips t where id > :id

    metrics: |
      {{- range .R }}
      rwr3_trips_count {{ .cnt }}
      {{- end  }}

    params:
      id: 0

  pg_stats_activity_state:
    sql: select state as state, count(*) as cnt from pg_stat_activity group by state
    caching_time: 30
    metrics: |
      {{- range .R }}
      pg_stats_activity_state{state="{{ .state }}"} {{ .cnt }}
      {{- end }}

  pg_stat_database:
    sql: >
      select  datname, numbackends, xact_commit, xact_rollback, blks_read, blks_hit,
        tup_returned, tup_fetched, tup_inserted, tup_updated, tup_deleted, conflicts,
        temp_files, temp_bytes, deadlocks, blk_read_time, blk_write_time
      from pg_stat_database

    caching_time: 30
    metrics: |
      {{- range .R }}
      pg_stat_database_numbackends{name="{{.datname}}"} {{.numbackends}}
      pg_stat_database_xact_commit{name="{{.datname}}"} {{.xact_commit}}
      pg_stat_database_xact_rollback{name="{{.datname}}"} {{.xact_rollback}}
      pg_stat_database_blks_read{name="{{.datname}}"} {{.blks_read}}
      pg_stat_database_blks_hit{name="{{.datname}}"} {{.blks_hit}}
      pg_stat_database_tup_returned{name="{{.datname}}"} {{.tup_returned}}
      pg_stat_database_tup_fetched{name="{{.datname}}"} {{.tup_fetched}}
      pg_stat_database_tup_inserted{name="{{.datname}}"} {{.tup_inserted}}
      pg_stat_database_tup_updated{name="{{.datname}}"} {{.tup_updated}}
      pg_stat_database_tup_deleted{name="{{.datname}}"} {{.tup_deleted}}
      pg_stat_database_conflicts{name="{{.datname}}"} {{.conflicts}}
      pg_stat_database_temp_files{name="{{.datname}}"} {{.temp_files}}
      pg_stat_database_temp_bytes{name="{{.datname}}"} {{.temp_bytes}}
      pg_stat_database_deadlocks{name="{{.datname}}"} {{.deadlocks}}
      pg_stat_database_blk_read_time{name="{{.datname}}"} {{.blk_read_time}}
      pg_stat_database_blk_write_time{name="{{.datname}}"} {{.blk_write_time}}
      {{- end }}

  tidb_test:
    sql: >
      select id, aa from test

    metrics: |
      {{- range .R }}
      tidb_test{key="{{ .aa }}"} {{ .id }}
      {{- end }}

  oracle_v_sysmetric:
    sql: >
       select metric_name as name, to_char(value) as value from V$SYSMETRIC where GROUP_ID=2
    caching_time: 10

    metrics: |
      {{- range .R }}
      oracle_v_sysmetric_{{ .NAME | keepAlfaNumUnderlineSpace | trim | replaceSpaces | toLower }} {{ .VALUE }}
      {{- end  }}
